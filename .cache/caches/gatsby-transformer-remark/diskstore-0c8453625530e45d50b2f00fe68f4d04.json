{"expireTime":9007200889124377000,"key":"transformer-remark-markdown-html-ast-a0bfedfa92e47d26d92a20aa3e70896b-gatsby-remark-imagesgatsby-remark-table-of-contentsgatsby-remark-prismjsgatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-mathjax-ssr-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"글을-시작하기에-앞서","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B8%80%EC%9D%84-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C","aria-label":"글을 시작하기에 앞서 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"글을 시작하기에 앞서","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":15,"offset":15}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":15,"offset":15}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"블로그에 게시된 모든 글은 ","position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":4,"column":16,"offset":32}}},{"type":"raw","value":"<code class=\"language-text\">마크다운</code>","position":{"start":{"line":4,"column":16,"offset":32},"end":{"line":4,"column":22,"offset":38}}},{"type":"text","value":" 형식으로 작성되었습니다.","position":{"start":{"line":4,"column":22,"offset":38},"end":{"line":4,"column":36,"offset":52}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":4,"column":36,"offset":52},"end":{"line":5,"column":1,"offset":55}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code class=\"language-text\">마크다운</code>","position":{"start":{"line":5,"column":1,"offset":55},"end":{"line":5,"column":7,"offset":61}}},{"type":"text","value":"을 사용하면 텍스트, 코드, 이미지 등을 손 쉽게 회면에 나타낼 수 있고,","position":{"start":{"line":5,"column":7,"offset":61},"end":{"line":5,"column":48,"offset":102}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":5,"column":48,"offset":102},"end":{"line":6,"column":1,"offset":105}}},{"type":"text","value":"\n"},{"type":"text","value":"문법 자체가 어렵지 않기 때문에 쉽고 빠르게 배워 적용할 수 있다는 점에서 매우 매력적인 언어라고 생각함.","position":{"start":{"line":6,"column":1,"offset":105},"end":{"line":6,"column":60,"offset":164}}}],"position":{"start":{"line":4,"column":1,"offset":17},"end":{"line":6,"column":60,"offset":164}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"markdown이란","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#markdown%EC%9D%B4%EB%9E%80","aria-label":"markdown이란 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Markdown이란?","position":{"start":{"line":8,"column":5,"offset":170},"end":{"line":8,"column":16,"offset":181}}}],"position":{"start":{"line":8,"column":1,"offset":166},"end":{"line":8,"column":16,"offset":181}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"raw","value":"<code class=\"language-text\">마크다운</code>","position":{"start":{"line":10,"column":1,"offset":183},"end":{"line":10,"column":7,"offset":189}}},{"type":"text","value":"(markdown)은 일반 텍스트 기반의 경량 마크업 언어다. 일반 텍스트로 서식이 있는 문서를 작성하는 데 사용되며, 일반 마크업 언어에 비해 문법이 쉽고 간단한 것이 특징이다. HTML과 리치 텍스트(RTF) 등 서식 문서로 쉽게 변환되기 때문에 응용 소프트웨어와 함께 배포되는 README 파일이나 온라인 게시물 등에 많이 사용된다.","position":{"start":{"line":10,"column":7,"offset":189},"end":{"line":10,"column":196,"offset":378}}}],"position":{"start":{"line":10,"column":1,"offset":183},"end":{"line":10,"column":196,"offset":378}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":12,"column":1,"offset":380},"end":{"line":12,"column":5,"offset":384}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"markdown의-역사","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#markdown%EC%9D%98-%EC%97%AD%EC%82%AC","aria-label":"markdown의 역사 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Markdown의 역사","position":{"start":{"line":14,"column":5,"offset":390},"end":{"line":14,"column":17,"offset":402}}}],"position":{"start":{"line":14,"column":1,"offset":386},"end":{"line":14,"column":17,"offset":402}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"존 그루버는 2004년에 문법 면에서 에런 스워츠와 중대한 협업을 통해 ","position":{"start":{"line":16,"column":1,"offset":404},"end":{"line":16,"column":41,"offset":444}}},{"type":"raw","value":"<code class=\"language-text\">마크다운</code>","position":{"start":{"line":16,"column":41,"offset":444},"end":{"line":16,"column":47,"offset":450}}},{"type":"text","value":" 언어를 만들었으며, 사람들이 읽기 쉽고 쓰기 쉬운 플레인 텍스트 포맷을 사용하여 쓸 수 있으면서 구조적으로 유효한 XHTML(또는 HTML)로 선택적 변환이 가능하게 하는 것이 목표이다.","position":{"start":{"line":16,"column":47,"offset":450},"end":{"line":16,"column":152,"offset":555}}}],"position":{"start":{"line":16,"column":1,"offset":404},"end":{"line":16,"column":152,"offset":555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"c--c","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#c--c","aria-label":"c  c permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"C / C++","position":{"start":{"line":18,"column":4,"offset":560},"end":{"line":18,"column":11,"offset":567}}}],"position":{"start":{"line":18,"column":1,"offset":557},"end":{"line":18,"column":11,"offset":567}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;string></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">private</span><span class=\"token operator\">:</span>\n  string name<span class=\"token punctuation\">{</span> <span class=\"token string\">\"\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">{</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n  <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">explicit</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>string _name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _age<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">age</span><span class=\"token punctuation\">(</span>_age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span>string _name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> _age<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span>_name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">age</span><span class=\"token punctuation\">(</span>_age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token function\">view</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"이름: \"</span> <span class=\"token operator\">&lt;&lt;</span> name <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\n\"</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"나이: \"</span> <span class=\"token operator\">&lt;&lt;</span> age <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  Person p<span class=\"token punctuation\">{</span> <span class=\"token string\">\"강민구\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  p<span class=\"token punctuation\">.</span><span class=\"token function\">view</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":20,"column":1,"offset":569},"end":{"line":45,"column":4,"offset":987}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":47,"column":1,"offset":989},"end":{"line":47,"column":5,"offset":993}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"java","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#java","aria-label":"java permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Java","position":{"start":{"line":49,"column":4,"offset":998},"end":{"line":49,"column":8,"offset":1002}}}],"position":{"start":{"line":49,"column":1,"offset":995},"end":{"line":49,"column":8,"offset":1002}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Lamp</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">boolean</span> isOn<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">void</span> <span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    isOn <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Light on? \"</span> <span class=\"token operator\">+</span> isOn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">Lamp</span> led <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Lamp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    led<span class=\"token punctuation\">.</span><span class=\"token function\">turnOn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":51,"column":1,"offset":1004},"end":{"line":65,"column":4,"offset":1224}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":67,"column":1,"offset":1226},"end":{"line":67,"column":5,"offset":1230}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"python","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#python","aria-label":"python permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Python","position":{"start":{"line":69,"column":4,"offset":1235},"end":{"line":69,"column":10,"offset":1241}}}],"position":{"start":{"line":69,"column":1,"offset":1232},"end":{"line":69,"column":10,"offset":1241}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>data\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LinkedList</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> <span class=\"token boolean\">None</span>\n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__repr__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        node <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>head\n        nodes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">while</span> node <span class=\"token keyword\">is</span> <span class=\"token keyword\">not</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">:</span>\n            nodes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>\n            node <span class=\"token operator\">=</span> node<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span>\n        nodes<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token string\">\"None\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\" -> \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>nodes<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":71,"column":1,"offset":1243},"end":{"line":92,"column":4,"offset":1695}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":94,"column":1,"offset":1697},"end":{"line":94,"column":5,"offset":1701}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"javascript","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#javascript","aria-label":"javascript permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"JavaScript","position":{"start":{"line":96,"column":4,"offset":1706},"end":{"line":96,"column":14,"offset":1716}}}],"position":{"start":{"line":96,"column":1,"offset":1703},"end":{"line":96,"column":14,"offset":1716}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Node</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> node <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  node<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n  node<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> node<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LinkedList</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> list <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  list<span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  list<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">addToTail</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> node <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Node</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tail <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  list<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">removeHead</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> removeNode <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>TimeRanges<span class=\"token punctuation\">.</span>head <span class=\"token operator\">!==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head <span class=\"token operator\">=</span> removeNode<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> removeNode<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  list<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">contains</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">target</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> accNode <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>accNode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>accNode<span class=\"token punctuation\">.</span>value <span class=\"token operator\">===</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      accNode <span class=\"token operator\">=</span> accNode<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> list<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":98,"column":1,"offset":1718},"end":{"line":144,"column":4,"offset":2532}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":146,"column":1,"offset":2534},"end":{"line":146,"column":5,"offset":2538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"kotlin","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#kotlin","aria-label":"kotlin permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Kotlin","position":{"start":{"line":148,"column":4,"offset":2543},"end":{"line":148,"column":10,"offset":2549}}}],"position":{"start":{"line":148,"column":1,"offset":2540},"end":{"line":148,"column":10,"offset":2549}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Scanner\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span>args<span class=\"token operator\">:</span> Array<span class=\"token operator\">&lt;</span>String<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> i<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n  <span class=\"token keyword\">var</span> value<span class=\"token operator\">:</span> Int\n  <span class=\"token keyword\">var</span> mList <span class=\"token operator\">=</span> mutableListOf<span class=\"token operator\">&lt;</span>Int<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">val</span> scan<span class=\"token operator\">:</span> Scanner <span class=\"token operator\">=</span> <span class=\"token function\">Scanner</span><span class=\"token punctuation\">(</span>System<span class=\"token punctuation\">.</span>`<span class=\"token keyword\">in</span>`<span class=\"token punctuation\">)</span>\n  <span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"size is \"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">val</span> size <span class=\"token operator\">=</span> scan<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  mList<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    value <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">duple</span><span class=\"token punctuation\">(</span>mList<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      mList<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n      i<span class=\"token operator\">++</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">continue</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>mList<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">duple</span><span class=\"token punctuation\">(</span>mList<span class=\"token operator\">:</span> MutableList<span class=\"token operator\">&lt;</span>Int<span class=\"token operator\">></span><span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> Int<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Boolean <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>item <span class=\"token keyword\">in</span> mList<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>item <span class=\"token operator\">==</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":150,"column":1,"offset":2551},"end":{"line":184,"column":4,"offset":3176}}},{"type":"text","value":"\n"},{"type":"raw","value":"<br>","position":{"start":{"line":186,"column":1,"offset":3178},"end":{"line":186,"column":5,"offset":3182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"go","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#go","aria-label":"go permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Go","position":{"start":{"line":188,"column":4,"offset":3187},"end":{"line":188,"column":6,"offset":3189}}}],"position":{"start":{"line":188,"column":1,"offset":3184},"end":{"line":188,"column":6,"offset":3189}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n <span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">type</span> width <span class=\"token builtin\">int</span> <span class=\"token comment\">//user defined type</span>\n<span class=\"token keyword\">type</span> Mobile <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n brand <span class=\"token builtin\">string</span>\n model <span class=\"token builtin\">string</span>\n price <span class=\"token builtin\">int</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>mob Mobile<span class=\"token punctuation\">)</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//func associated with Mobile</span>\n mob<span class=\"token punctuation\">.</span>brand <span class=\"token operator\">=</span> <span class=\"token string\">\"Xiomi\"</span>\n <span class=\"token keyword\">return</span> mob<span class=\"token punctuation\">.</span>brand\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>mob <span class=\"token operator\">*</span>Mobile<span class=\"token punctuation\">)</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//func associated with Mobile</span>\n mob<span class=\"token punctuation\">.</span>brand <span class=\"token operator\">=</span> <span class=\"token string\">\"Xiomi\"</span>\n <span class=\"token keyword\">return</span> mob<span class=\"token punctuation\">.</span>brand\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">var</span> height width\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">)</span>\n m <span class=\"token operator\">:=</span> Mobile<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token comment\">//Default values inside struct{\" \" 0}</span>\n <span class=\"token keyword\">var</span> mob Mobile <span class=\"token comment\">//Instance creation using var</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>mob<span class=\"token punctuation\">)</span>\n mobs <span class=\"token operator\">:=</span> <span class=\"token function\">new</span><span class=\"token punctuation\">(</span>Mobile<span class=\"token punctuation\">)</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>mobs<span class=\"token punctuation\">)</span>\n phone <span class=\"token operator\">:=</span> Mobile<span class=\"token punctuation\">{</span><span class=\"token string\">\"Samsung\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Galaxy\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24500</span><span class=\"token punctuation\">}</span> <span class=\"token comment\">//Struct initialization</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Before Change:\"</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Function Call\"</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">.</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Xiomi</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"After Change:\"</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span> <span class=\"token comment\">//still old values are coming</span>\n <span class=\"token punctuation\">{</span><span class=\"token string\">\"Samsung\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Galaxy\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">24500</span><span class=\"token punctuation\">}</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Function Call:\"</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//calling show()</span>\n fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"After Change:\"</span><span class=\"token punctuation\">,</span> phone<span class=\"token punctuation\">)</span> <span class=\"token comment\">//Here changed values will</span>\n reflect\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":190,"column":1,"offset":3191},"end":{"line":227,"column":4,"offset":4163}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"table-of-contents\">"},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B8%80%EC%9D%84-%EC%8B%9C%EC%9E%91%ED%95%98%EA%B8%B0%EC%97%90-%EC%95%9E%EC%84%9C"},"children":[{"type":"text","value":"글을 시작하기에 앞서"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#markdown%EC%9D%B4%EB%9E%80"},"children":[{"type":"text","value":"Markdown이란?"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#markdown%EC%9D%98-%EC%97%AD%EC%82%AC"},"children":[{"type":"text","value":"Markdown의 역사"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#c--c"},"children":[{"type":"text","value":"C / C++"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#java"},"children":[{"type":"text","value":"Java"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#python"},"children":[{"type":"text","value":"Python"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#javascript"},"children":[{"type":"text","value":"JavaScript"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#kotlin"},"children":[{"type":"text","value":"Kotlin"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#go"},"children":[{"type":"text","value":"Go"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"raw","value":"</div>"}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":232,"column":1,"offset":4177}}}}